plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

group = 'com.fyp'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = true
	}
}

sonar {
	properties {
		property "sonar.projectKey", ${SONAR_PROJECT_KEY}
		property "sonar.organization", "hassanalics1"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths","build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-devtools:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


